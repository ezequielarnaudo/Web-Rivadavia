//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatosGutenberg
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GutenbergEntities : DbContext
    {
        public GutenbergEntities()
            : base("name=GutenbergEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int ExecuteNEOSQL(string sqlCommand)
        {
            var sqlCommandParameter = sqlCommand != null ?
                new ObjectParameter("sqlCommand", sqlCommand) :
                new ObjectParameter("sqlCommand", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExecuteNEOSQL", sqlCommandParameter);
        }
    
        public virtual int INSERT_Editor(string nombreEditor, string profesion, string urlFoto)
        {
            var nombreEditorParameter = nombreEditor != null ?
                new ObjectParameter("nombreEditor", nombreEditor) :
                new ObjectParameter("nombreEditor", typeof(string));
    
            var profesionParameter = profesion != null ?
                new ObjectParameter("profesion", profesion) :
                new ObjectParameter("profesion", typeof(string));
    
            var urlFotoParameter = urlFoto != null ?
                new ObjectParameter("urlFoto", urlFoto) :
                new ObjectParameter("urlFoto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_Editor", nombreEditorParameter, profesionParameter, urlFotoParameter);
        }
    
        public virtual int INSERT_Nota(Nullable<long> idTag, Nullable<long> idEditor, string titulo, string subtitulo, string foto, string descripcionFoto, string textoCompleto, string fechaGuardado, string fechaPublicacion)
        {
            var idTagParameter = idTag.HasValue ?
                new ObjectParameter("idTag", idTag) :
                new ObjectParameter("idTag", typeof(long));
    
            var idEditorParameter = idEditor.HasValue ?
                new ObjectParameter("idEditor", idEditor) :
                new ObjectParameter("idEditor", typeof(long));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("titulo", titulo) :
                new ObjectParameter("titulo", typeof(string));
    
            var subtituloParameter = subtitulo != null ?
                new ObjectParameter("subtitulo", subtitulo) :
                new ObjectParameter("subtitulo", typeof(string));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("foto", foto) :
                new ObjectParameter("foto", typeof(string));
    
            var descripcionFotoParameter = descripcionFoto != null ?
                new ObjectParameter("descripcionFoto", descripcionFoto) :
                new ObjectParameter("descripcionFoto", typeof(string));
    
            var textoCompletoParameter = textoCompleto != null ?
                new ObjectParameter("textoCompleto", textoCompleto) :
                new ObjectParameter("textoCompleto", typeof(string));
    
            var fechaGuardadoParameter = fechaGuardado != null ?
                new ObjectParameter("fechaGuardado", fechaGuardado) :
                new ObjectParameter("fechaGuardado", typeof(string));
    
            var fechaPublicacionParameter = fechaPublicacion != null ?
                new ObjectParameter("fechaPublicacion", fechaPublicacion) :
                new ObjectParameter("fechaPublicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_Nota", idTagParameter, idEditorParameter, tituloParameter, subtituloParameter, fotoParameter, descripcionFotoParameter, textoCompletoParameter, fechaGuardadoParameter, fechaPublicacionParameter);
        }
    
        public virtual ObjectResult<Search_Nota_Indexed_Result> Search_Nota_Indexed(string searchString, Nullable<long> pag, Nullable<long> cantporpag, Nullable<long> idIgnoredTag)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("searchString", searchString) :
                new ObjectParameter("searchString", typeof(string));
    
            var pagParameter = pag.HasValue ?
                new ObjectParameter("pag", pag) :
                new ObjectParameter("pag", typeof(long));
    
            var cantporpagParameter = cantporpag.HasValue ?
                new ObjectParameter("cantporpag", cantporpag) :
                new ObjectParameter("cantporpag", typeof(long));
    
            var idIgnoredTagParameter = idIgnoredTag.HasValue ?
                new ObjectParameter("idIgnoredTag", idIgnoredTag) :
                new ObjectParameter("idIgnoredTag", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Search_Nota_Indexed_Result>("Search_Nota_Indexed", searchStringParameter, pagParameter, cantporpagParameter, idIgnoredTagParameter);
        }
    
        public virtual ObjectResult<Search_Note_Result> Search_Note(string searchString)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("searchString", searchString) :
                new ObjectParameter("searchString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Search_Note_Result>("Search_Note", searchStringParameter);
        }
    
        public virtual ObjectResult<SELECT_Editor_Result> SELECT_Editor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECT_Editor_Result>("SELECT_Editor");
        }
    
        public virtual ObjectResult<SELECT_Editor_BY_ID_Result> SELECT_Editor_BY_ID(Nullable<long> idEditor)
        {
            var idEditorParameter = idEditor.HasValue ?
                new ObjectParameter("idEditor", idEditor) :
                new ObjectParameter("idEditor", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECT_Editor_BY_ID_Result>("SELECT_Editor_BY_ID", idEditorParameter);
        }
    
        public virtual ObjectResult<SELECT_Nota_Result> SELECT_Nota()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECT_Nota_Result>("SELECT_Nota");
        }
    
        public virtual ObjectResult<SELECT_Nota_BY_EDITOR_Result> SELECT_Nota_BY_EDITOR(Nullable<long> idEditor)
        {
            var idEditorParameter = idEditor.HasValue ?
                new ObjectParameter("idEditor", idEditor) :
                new ObjectParameter("idEditor", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECT_Nota_BY_EDITOR_Result>("SELECT_Nota_BY_EDITOR", idEditorParameter);
        }
    
        public virtual ObjectResult<SELECT_Nota_BY_FECHA_Result> SELECT_Nota_BY_FECHA(string fechaDesde, string fechaHasta)
        {
            var fechaDesdeParameter = fechaDesde != null ?
                new ObjectParameter("fechaDesde", fechaDesde) :
                new ObjectParameter("fechaDesde", typeof(string));
    
            var fechaHastaParameter = fechaHasta != null ?
                new ObjectParameter("fechaHasta", fechaHasta) :
                new ObjectParameter("fechaHasta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECT_Nota_BY_FECHA_Result>("SELECT_Nota_BY_FECHA", fechaDesdeParameter, fechaHastaParameter);
        }
    
        public virtual ObjectResult<SELECT_Nota_BY_ID_Result> SELECT_Nota_BY_ID(Nullable<long> idNota)
        {
            var idNotaParameter = idNota.HasValue ?
                new ObjectParameter("idNota", idNota) :
                new ObjectParameter("idNota", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECT_Nota_BY_ID_Result>("SELECT_Nota_BY_ID", idNotaParameter);
        }
    
        public virtual ObjectResult<SELECT_Nota_BY_TAG_Result> SELECT_Nota_BY_TAG(Nullable<long> idTag)
        {
            var idTagParameter = idTag.HasValue ?
                new ObjectParameter("idTag", idTag) :
                new ObjectParameter("idTag", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECT_Nota_BY_TAG_Result>("SELECT_Nota_BY_TAG", idTagParameter);
        }
    
        public virtual ObjectResult<SELECT_Nota_BY_TOP_Result> SELECT_Nota_BY_TOP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECT_Nota_BY_TOP_Result>("SELECT_Nota_BY_TOP");
        }
    
        public virtual ObjectResult<SELECT_Nota_Ultimas_Result> SELECT_Nota_Ultimas(Nullable<long> cantNotas)
        {
            var cantNotasParameter = cantNotas.HasValue ?
                new ObjectParameter("cantNotas", cantNotas) :
                new ObjectParameter("cantNotas", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECT_Nota_Ultimas_Result>("SELECT_Nota_Ultimas", cantNotasParameter);
        }
    
        public virtual ObjectResult<SELECT_Nota_Ultimas_BY_TAG_Result> SELECT_Nota_Ultimas_BY_TAG(Nullable<long> idTag, Nullable<long> cantNotas)
        {
            var idTagParameter = idTag.HasValue ?
                new ObjectParameter("idTag", idTag) :
                new ObjectParameter("idTag", typeof(long));
    
            var cantNotasParameter = cantNotas.HasValue ?
                new ObjectParameter("cantNotas", cantNotas) :
                new ObjectParameter("cantNotas", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECT_Nota_Ultimas_BY_TAG_Result>("SELECT_Nota_Ultimas_BY_TAG", idTagParameter, cantNotasParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SELECT_Nota_Ultimas_BY_TAG_Count(Nullable<long> idTag)
        {
            var idTagParameter = idTag.HasValue ?
                new ObjectParameter("idTag", idTag) :
                new ObjectParameter("idTag", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SELECT_Nota_Ultimas_BY_TAG_Count", idTagParameter);
        }
    
        public virtual ObjectResult<SELECT_Nota_Ultimas_BY_TAG_Indexed_Result> SELECT_Nota_Ultimas_BY_TAG_Indexed(Nullable<long> idTag, Nullable<long> pag, Nullable<long> cantPorPag)
        {
            var idTagParameter = idTag.HasValue ?
                new ObjectParameter("idTag", idTag) :
                new ObjectParameter("idTag", typeof(long));
    
            var pagParameter = pag.HasValue ?
                new ObjectParameter("pag", pag) :
                new ObjectParameter("pag", typeof(long));
    
            var cantPorPagParameter = cantPorPag.HasValue ?
                new ObjectParameter("cantPorPag", cantPorPag) :
                new ObjectParameter("cantPorPag", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECT_Nota_Ultimas_BY_TAG_Indexed_Result>("SELECT_Nota_Ultimas_BY_TAG_Indexed", idTagParameter, pagParameter, cantPorPagParameter);
        }
    
        public virtual ObjectResult<SELECT_RedSocial_BY_EDITOR_Result> SELECT_RedSocial_BY_EDITOR(Nullable<long> idEditor)
        {
            var idEditorParameter = idEditor.HasValue ?
                new ObjectParameter("idEditor", idEditor) :
                new ObjectParameter("idEditor", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECT_RedSocial_BY_EDITOR_Result>("SELECT_RedSocial_BY_EDITOR", idEditorParameter);
        }
    
        public virtual ObjectResult<SELECT_Tag_Result> SELECT_Tag()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECT_Tag_Result>("SELECT_Tag");
        }
    
        public virtual ObjectResult<SELECT_Tag_BY_ID_Result> SELECT_Tag_BY_ID(Nullable<long> idTag)
        {
            var idTagParameter = idTag.HasValue ?
                new ObjectParameter("idTag", idTag) :
                new ObjectParameter("idTag", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECT_Tag_BY_ID_Result>("SELECT_Tag_BY_ID", idTagParameter);
        }
    
        [DbFunction("GutenbergEntities", "splitstring")]
        public virtual IQueryable<string> splitstring(string stringToSplit)
        {
            var stringToSplitParameter = stringToSplit != null ?
                new ObjectParameter("stringToSplit", stringToSplit) :
                new ObjectParameter("stringToSplit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[GutenbergEntities].[splitstring](@stringToSplit)", stringToSplitParameter);
        }
    
        public virtual int UPDATE_ContadorNota(Nullable<long> idNota)
        {
            var idNotaParameter = idNota.HasValue ?
                new ObjectParameter("idNota", idNota) :
                new ObjectParameter("idNota", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_ContadorNota", idNotaParameter);
        }
    
        public virtual int UPDATE_NOTA(Nullable<long> idnota, Nullable<long> idtag, Nullable<long> ideditor, string titulo, string subtitulo, string foto, string descripcionfoto, string textocompleto, string fechaguardado, string fechapublicacion)
        {
            var idnotaParameter = idnota.HasValue ?
                new ObjectParameter("idnota", idnota) :
                new ObjectParameter("idnota", typeof(long));
    
            var idtagParameter = idtag.HasValue ?
                new ObjectParameter("idtag", idtag) :
                new ObjectParameter("idtag", typeof(long));
    
            var ideditorParameter = ideditor.HasValue ?
                new ObjectParameter("ideditor", ideditor) :
                new ObjectParameter("ideditor", typeof(long));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("titulo", titulo) :
                new ObjectParameter("titulo", typeof(string));
    
            var subtituloParameter = subtitulo != null ?
                new ObjectParameter("subtitulo", subtitulo) :
                new ObjectParameter("subtitulo", typeof(string));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("foto", foto) :
                new ObjectParameter("foto", typeof(string));
    
            var descripcionfotoParameter = descripcionfoto != null ?
                new ObjectParameter("descripcionfoto", descripcionfoto) :
                new ObjectParameter("descripcionfoto", typeof(string));
    
            var textocompletoParameter = textocompleto != null ?
                new ObjectParameter("textocompleto", textocompleto) :
                new ObjectParameter("textocompleto", typeof(string));
    
            var fechaguardadoParameter = fechaguardado != null ?
                new ObjectParameter("fechaguardado", fechaguardado) :
                new ObjectParameter("fechaguardado", typeof(string));
    
            var fechapublicacionParameter = fechapublicacion != null ?
                new ObjectParameter("fechapublicacion", fechapublicacion) :
                new ObjectParameter("fechapublicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_NOTA", idnotaParameter, idtagParameter, ideditorParameter, tituloParameter, subtituloParameter, fotoParameter, descripcionfotoParameter, textocompletoParameter, fechaguardadoParameter, fechapublicacionParameter);
        }
    }
}
